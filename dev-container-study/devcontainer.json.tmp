// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.231.6/containers/debian
{
	"name": "Debian",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		// Update 'VARIANT' to pick an Debian version: bullseye, buster
		// Use bullseye on local arm64/Apple Silicon.
		"args": {
			"VARIANT": "bullseye"
		}
	},
	"mounts": [
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
	],
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"editor.formatOnSave": true,
				"files.insertFinalNewline": true,
				"[makefile]": {
					"editor.insertSpaces": false,
					"editor.detectIndentation": false
				}
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"hashicorp.terraform",
				"ms-vscode.makefile-tools"
			]
		}
	},
	"postCreateCommand": "bash /tmp/postCreate.sh",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	"runArgs": [
		"--env-file",
		"${localWorkspaceFolder}/.devcontainer/local.env"
	],
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"updateRemoteUserUID": true,
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
		"LOCAL_USER_DIR": "${localEnv:HOME}${localEnv:USERPROFILE}",
		"LOCAL_USER": "${localEnv:USER}"
	},
	"features": {
		"docker-from-docker": "latest"
	},
	"workspaceMount": "source=${localWorkspaceFolder},target=${localWorkspaceFolder},type=bind,consistency=cached",
	"workspaceFolder": "${localWorkspaceFolder}"
}